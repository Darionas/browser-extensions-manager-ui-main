/* ---------------- */
/* Custom properties */
/* ---------------- */

:root {
    
    /* Colors */
    
    /* Neutrals */
    --clr-neutral-900: 227 75% 14%; /* text --clr-neutral-0: */
    --clr-neutral-800: 226 25% 17%;
    --clr-neutral-700: 225 23% 24%;
    --clr-neutral-600: 226 11% 37%;  /* text --clr-neutral-300 */  
    --clr-neutral-300: 0 0% 78%; /* --clr-neutral-600 */
    --clr-neutral-200: 217 61% 90%; /* --clr-neutral-600 */
    --clr-neutral-100: 0 0% 93%;
    --clr-neutral-0: 200 60% 99%; /*  --clr-neutral-800 */
    
    /* Red */
    --clr-red-400: 3 86% 64%;
    --clr-red-500: 3 71% 56%;
    --clr-red-700: 3 77% 44%; /* --clr-red-400 */
    
    /* Gradient */
    --background: linear-gradient(180deg, #EBF2FC 0%, #EEFBF9 100%);
    
    /* font-sizes */
    --fs-34: 2.125rem;
    --fs-20: 1.25rem;
    --fs-16: 1rem;
    
    /* font-families */
    --ff-noto-sans: 'Noto Sans', sans-serif;
    
    /* font-weights */
    --fw-400: 400;
    --fw-500: 500;
    --fw-700: 700;
    
    /* line-heights */
    --lh-1: 1;
    --lh-12: 1.2;
    --lh-14: 1.4;
    
    /* letter-spacing */
    --ls-1: -1px;
    --ls-02: -0.2px;
    --ls-03: -0.3px;
    --ls-05: -0.5px;
}

.darkMode {
     /* Neutrals */
    --clr-neutral-900: 200 60% 99%; /* text --clr-neutral-0: */
    --clr-neutral-800: 226 25% 17%;
    --clr-neutral-700: 225 23% 24%;
    --clr-neutral-600: 0 0% 78%; /* text --clr-neutral-300 */  
    --clr-neutral-300: 226 11% 37%; /* --clr-neutral-600 */
    --clr-neutral-200: 226 11% 37%; /* --clr-neutral-600 */
    --clr-neutral-100: 0 0% 93%;
    --clr-neutral-0: 226 25% 17%; /*  --clr-neutral-800 */
    
    /* Red */
    --clr-red-400: 3 86% 64%;
    --clr-red-500: 3 71% 56%;
    --clr-red-700: 3 86% 64%; /* --clr-red-400 */

    --background: linear-gradient(180deg, #04091B 0%, #091540 100%);
}

/* ---------------- */
/* Utility classes */
/* ---------------- */

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

.container {
    padding-inline: 2em;
    margin-inline: auto;
    max-width: 60rem; /*buvo 80rem;*/
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap; /* added line */
    border: 0;
  }
  
  .skip-to-content {
      position: absolute;
      background-color: hsl(var(--clr-white));
      color: hsl(var(--clr-dark));
      padding: .5em 1em;
      margin-inline: auto;
      z-index: 1900;
      transform: translateY(-100%);
      transition: transform 250ms ease-in-out;
  }
  
  .skip-to-content:focus {
      transform: translateY(0);
  }
  
  
 /* Colors */
 
.text-neutral-900 {color: hsl(var(--clr-neutral-900));}
.text-neutral-600 {color: hsl(var(--clr-neutral-600));}
.text-neutral-300 {color: hsl(var(--clr-neutral-300));}
.text-neutral-0 {color: hsl(var(--clr-neutral-0));}
 
.bg-neutral-900 {background-color: hsl(var(--clr-neutral-900));}
.bg-neutral-800 {background-color: hsl(var(--clr-neutral-800));}
.bg-neutral-700 {background-color: hsl(var(--clr-neutral-700));}
.bg-neutral-600 {background-color: hsl(var(--clr-neutral-600));}
.bg-neutral-300 {background-color: hsl(var(--clr-neutral-300));}
.bg-neutral-200 {background-color: hsl(var(--clr-neutral-200));}
.bg-neutral-100 {background-color: hsl(var(--clr-neutral-100));}
.bg-neutral-0 {background-color: hsl(var(--clr-neutral-0));}
.bg-red-700 {background-color: hsl(var(--clr-red-700));}
.bg-red-500 {background-color: hsl(var(--clr-red-500));}
.bg-red-400 {background-color: hsl(var(--clr-red-400));}
 
 
/* typography */

.lh-1 { line-height: var(--lh-1);}
.lh-12 { line-height: var(--lh-12);}
.lh-14 { line-height: var(--lh-14);}

.ls-1 { letter-spacing: var(--ls-1);}
.ls-02 { letter-spacing: var(--ls-02);}
.ls-03 { letter-spacing: var(--ls-03);}
.ls-05 { letter-spacing: var(--ls-05);}

.fs-34 { font-size: var(--fs-34);}
.fs-20 { font-size: var(--fs-20);}
.fs-16 { font-size: var(--fs-16);}

.fw-400 { font-weight: var(--fw-400);}
.fw-500 { font-weight: var(--fw-500);}
.fw-700 { font-weight: var(--fw-700);}


body {
    font-family: var(--ff-noto-sans);
    font-size: var(--fs-16);
    font-weight: var(--fw-400);
    color: hsl(var(--clr-neutral-900));
    line-height: var(--lh-14);
    letter-spacing: var(--ls-05);
    background-image: var(--background);
    border: 1px solid green;
}

/* ------------------ */
/* Typography */
/* ------------------ */


/* ------------------ */
/* Components */
/* ------------------ */

/* Logo */
.logoName > path {
    fill: hsl(var(--clr-neutral-900));
}

/* Toggle button with all states */
/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 2.25rem; /* 60px *//* mano */
  height: 1.25rem; /* 34px *//* mano */
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider container*/
/* 1.1. default; false */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 1.25rem;
  width: 2.25rem;
  background-color: hsl(var(--clr-neutral-300)); /* #ccc; *//* mano */
  -webkit-transition: .4s;
  transition: .4s;
}

/* Oval slider */
.slider:before {
  position: absolute;
  content: "";
  height: 1rem; /* 26px *//* mano */
  width: 1rem; /* 26px *//* mano */
  left: 0.14rem; /* 4px; */ /* mano */
  bottom: 0.14rem; /* 4px; */ /* mano */
  background-color: hsl(200 60% 99%); /* white *//* mano */
  box-shadow: 
      0 1px 3px 0 hsla(218, 29%, 5%, 0.15),
      0 1px 2px -1px hsla(218, 29%, 5%, 0.15);
  -webkit-transition: .4s;
  transition: .4s;
}

/* 1.2. default; true */
input:checked + .slider {
  background-color: hsl(var(--clr-red-700)); /* #2196F3 */ /* mano */
}

input:checked + .slider:before {
  box-shadow: 
      0 1px 3px 0 hsla(218, 29%, 5%, 0.3),
      0 1px 2px -1px hsla(218, 29%, 5%, 0.3);
}

/* 2.1. hover; false - no need to set, the same as default, false */
/* input:hover:not(:checked) + .slider {
  background-color: hsl(var(--clr-neutral-300));*/ /* #2196F3 */ /* mano */
  /*box-shadow: 
      0 1px 3px 0 hsla(218, 29%, 5%, 0.15),
      0 1px 2px -1px hsla(218, 29%, 5%, 0.15);
} */

/* 2.2. hover; true; */
input:hover:checked + .slider {
  background-color: hsl(var(--clr-red-500)); /* #2196F3 */ /* mano */
}


/* To style a toggle button when it receives focus via the Tab key (keyboard navigation),
you can use the :focus-visible pseudo-class in your CSS. This pseudo-class targets 
elements that are focused but only if the focus is visible â€” which usually means the 
user navigated with the keyboard. */
/* When a button is toggled (e.g., focused, active, clicked), and an outline or border 
appears that wasn't there before, it increases the button's size, pushing surrounding 
elements or changing layout. To prevent this layout shift, there are a clean solution: 
    Use box-shadow to simulate a border/outline. It doesn't affect the element's size or layout.
    box-shadow is rendered outside the element's box, so it won't push other content around.*/
/* 3.1. focus; false*/
input:focus-visible:not(:checked) + .slider { 
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
}

/* 3.2. focus; true */
input:focus-visible:checked + .slider { 
    background-color: hsl(var(--clr-red-700));
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
}

/* disabled; false */
input:disabled:not(:checked) + .slider {
  background-color: hsl(var(--clr-neutral-100)); /* #2196F3 */ /* mano */
}

input:disabled + .slider:before {
  box-shadow: 
      0 1px 3px 0 hsla(218, 29%, 5%, 0.15),
      0 1px 2px -1px hsla(218, 29%, 5%, 0.15);
}

/* disabled; true */
input:disabled:checked + .slider {
  background-color: hsl(var(--clr-neutral-100)); /* #2196F3 */ /* mano */
}

input:checked + .slider:before {
  -webkit-transform: translateX(1rem); /* 26px */ /* mano */
  -ms-transform: translateX(1rem); /* 26px */ /* mano */
  transform: translateX(1rem); /* 26px */ /* mano */
}

/* Rounding sliders */
.slider.round {
  border-radius: 2.125rem; /* 34px *//* mano */
}

.slider.round:before {
  border-radius: 50%;
}

/* Dark-Light mode toggling button */
/* light default */
#darkMode-toggle {
   cursor: pointer;
   height: 3.2rem;
   width: 3.2rem;
   padding: 0.5rem;
   border: none;
   border-radius: 0.75rem;
   display: flex;
   justify-content: center;
   align-items: center;
   background-color: hsl(var(--clr-neutral-100));
   /* position: fixed;
   top: 2.5rem;
   right: 2.5rem; */
}

#darkMode-toggle svg:last-child {
    display: none;
}

.darkMode #darkMode-toggle svg:first-child {
    display: none;
}

.darkMode #darkMode-toggle svg:last-child {
    display: block;
}

/* light focus */
#darkMode-toggle:focus-visible {
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
    outline: none;
}

/* light hover */
#darkMode-toggle:hover {
    background-color: hsl(var(--clr-neutral-300));
}

/* dark default */
.darkMode #darkMode-toggle {
   background-color: hsl(var(--clr-neutral-700));
}

/* dark focus */
.darkMode #darkMode-toggle:focus-visible {
    background-color: hsl(var(--clr-neutral-700));
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
    outline: none;
}

/* dark hover */
.darkMode #darkMode-toggle:hover {
    background-color: hsl(var(--clr-neutral-300));
}

/* Filter tab */
/* Light mode */
/* default default */
.filterTab {
    cursor: pointer;
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    border: 2px solid hsl(var(--clr-neutral-200));
    background-color: hsl(var(--clr-neutral-0));
}

/* default active */
.filterTab[aria-selected="true"] {
    color: hsl(var(--clr-neutral-0));
    border: 2px solid hsl(var(--clr-red-700));
    background-color: hsl(var(--clr-red-700));    
}

/* hover active */
.filterTab[aria-selected="true"]:hover {
    border: 2px solid hsl(var(--clr-red-500));
    background-color: hsl(var(--clr-red-500));
}

/* focus default */
.filterTab[aria-selected="false"]:focus-visible {
    border: 2px solid hsl(var(--clr-neutral-0));
    background-color: hsl(var(--clr-neutral-0));
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-200)),
        0 0 0 4px hsl(var(--clr-red-400));
    outline: none;
}

/* focus active */
.filterTab[aria-selected="true"]:focus-visible {
    color: hsl(var(--clr-neutral-0));
    border: 2px solid hsl(var(--clr-red-700));
    background-color: hsl(var(--clr-red-700));
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
    outline: none;
}

/* darkMode */
/* default default */
.darkMode .filterTab {
    color: hsl(var(--clr-neutral-900));
    border: 2px solid hsl(var(--clr-neutral-300));
    background-color: hsl(var(--clr-neutral-700));
}

/* default active */
.darkMode .filterTab[aria-selected="true"] {
    color: hsl(var(--clr-neutral-0));
    border: 2px solid hsl(var(--clr-red-400));
    background-color: hsl(var(--clr-red-400));
}

/* hover default */
.darkMode .filterTab[aria-selected="false"]:hover {
    /* color: hsl(var(--clr-neutral-900)); */
    border: 2px solid hsl(var(--clr-neutral-300));
    background-color: hsl(var(--clr-neutral-300));
}

/* hover active */
.darkMode .filterTab[aria-selected="true"]:hover {
    color: hsl(var(--clr-neutral-0));
    border: 2px solid hsl(var(--clr-red-500));
    background-color: hsl(var(--clr-red-500));
}

/* focus default */
.darkMode .filterTab[aria-selected="false"]:focus-visible {
    border: 2px solid hsl(var(--clr-neutral-700));
    background-color: hsl(var(--clr-neutral-700));
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
}

/* focus active */
.darkMode .filterTab[aria-selected="true"]:focus-visible {
    color: hsl(var(--clr-neutral-0));
    border: 2px solid hsl(var(--clr-red-400));
    background-color: hsl(var(--clr-red-400));
    box-shadow: 
        0 0 0 2px hsl(var(--clr-neutral-0)),
        0 0 0 4px hsl(var(--clr-red-400));
}


/* Remove button */
/* Light mode */
.removeBtn {
    cursor: pointer;
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    border: 1px solid hsl(var(--clr-neutral-200));
    background-color: hsl(var(--clr-neutral-0));
}

.removeBtn:hover {
    background-color: hsl(var(--clr-red-500));
    color: hsl(var(--clr-neutral-0));
    /* border: none; */
}

.removeBtn:focus-visible {
    border: 2px solid hsl(var(--clr-neutral-0));
    outline: 2px solid hsl(var(--clr-red-400));
    color: hsl(var(--clr-neutral-900));
    background-color: hsl(var(--clr-neutral-100));
}

/* darkMode */
.darkMode.removeBtn {
    color: hsl(var(--clr-neutral-900));
    border: 2px solid hsl(var(--clr-neutral-300));
    background-color: hsl(var(--clr-neutral-0));
}

.darkMode.removeBtn:hover {
    color: hsl(var(--clr-neutral-0));
    background-color: hsl(var(--clr-red-700));
    border: 2px solid hsl(var(--clr-red-700));
}

.darkMode.removeBtn:focus-visible {
    background-color: hsl(var(--clr-neutral-700));
    color: hsl(var(--clr-neutral-900));
    border: 2px solid hsl(var(--clr-neutral-0));
    outline: 2px solid hsl(var(--clr-red-400));
}

/* Extension card */
/* .card, .card > * {
    border: 1px solid green;
} */

.card {
    grid-template-rows: minmax(1rem, 6rem) auto;
    grid-template-areas:
        'logo desc'
        'edit edit';
    gap: 1rem;
    padding: 1.25rem;
    max-width: 23.875rem;
    height: auto;
    border: 1px solid hsl(var(--clr-neutral-200));
    border-radius: 1.25rem;
    /* margin-bottom: 5rem; */
}

/* .card > * {
    border: 1px solid green;
} */

.card__logo {
    grid-area: logo;
    justify-self: start;
    align-self: start;
    /* justify-items: start;
    align-items: start; */
}

.card__desc {
    grid-area: desc;
    align-self: start;
    align-items: start;
}

/* .card__desc > * {
    border: 1px solid red;
} */

.card__desc > h2 {
    margin: 0;
    justify-self: start;
    align-self: start;
}

.card__desc > p {
    margin-top: 0.5rem;
    justify-self: start;
    align-self: start;
}

.card__edit {
    grid-area: edit;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.5rem;
}

/* -------------------- */
/* Layout */
/* -------------------- */
/* -------------------- */
/* Mobile Layout */
/* -------------------- */
.container {
    padding: 1.25rem 1rem 4rem 1rem;
    margin-inline: auto;
    max-width: 73rem;
    border: 1px solid red;
}

header {
    padding: 0.5rem 0.75rem;
    gap: auto;
    justify-content: space-between;
    align-items: center;
    border: 1px solid hsl(var(--clr-neutral-200));
    border-radius: 0.6rem;
    background-color: hsl(var(--clr-neutral-0));
}
/* Sometimes, SVGs have extra space due to their viewBox or internal alignment.*/
header > div svg {
    vertical-align: middle; /* Add this to your CSS to center svg */
}

.control {
    margin-block: 2.5rem;
    justify-items: center;
    gap: 1.5rem;
    /* border: 1px solid green; */
}

nav > div {
    gap: 0.75rem;
}

/* If nav button is active add fw-500 class in script.js */


.grid__main{
    gap: 0.75rem;
}

footer {
    margin-inline: auto;
}

/* -------------------- */
/* Tablet Layout */
/* -------------------- */
@media (min-width: 35em) {


}

/* -------------------- */
/* Desktop Layout */
/* -------------------- */
@media (min-width: 45em) {


}